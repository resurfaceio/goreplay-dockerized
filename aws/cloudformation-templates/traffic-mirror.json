{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploys Target, Filter and Session for VPC Traffic Mirroring",
  "Parameters": {
    "SourceNetworkInterfaceID": {
      "Type": "String",
      "Description": "The ID of the network interface to mirror traffic from"
    },
    "TargetNetworkInterfaceID": {
      "Type": "String",
      "Description": "The ID of the network interface to receive mirrored traffic"
    },
    "MirrorSessionNumber": {
      "Type": "Number",
      "Description": "Determines the order in which traffic mirror sessions are evaluated (1 is highest priority). Modify if you have mutiple traffic mirroring sessions only",
      "MinValue": 1,
      "MaxValue": 32766,
      "Default": 1
    },
    "VirtualNetworkID": {
      "Type": "Number",
      "Description": "VXLAN Network Identifier (VNI) used to idetify VXLAN segments in mirrored packets. Modify if you have another traffic mirroring session that uses the default VNI value",
      "Default": 8864121
    }
  },
  "Resources": {
    "ResurfaceMirrorTarget": {
      "Type" : "AWS::EC2::TrafficMirrorTarget",
      "Properties" : {
        "Description" : "Network interface that will receive mirrored traffic",
        "NetworkInterfaceId" : { "Ref": "TargetNetworkInterfaceID" }
      }
    },         
    "ResurfaceMirrorFilter": {
      "Type" : "AWS::EC2::TrafficMirrorFilter"
    },
    "ResurfaceMirrorFilterInboundRule": {
      "Type" : "AWS::EC2::TrafficMirrorFilterRule",
      "Properties" : {
        "Description" : "Mirror all TCP traffic from any location",
        "DestinationCidrBlock" : "0.0.0.0/0",
        "Protocol" : 6,
        "RuleAction" : "accept",
        "RuleNumber" : 100,
        "SourceCidrBlock" : "0.0.0.0/0",
        "TrafficDirection" : "ingress",
        "TrafficMirrorFilterId" : { "Ref": "ResurfaceMirrorFilter" }
      }
    },
    "ResurfaceMirrorFilterOutboundRule": {
      "Type" : "AWS::EC2::TrafficMirrorFilterRule",
      "Properties" : {
        "Description" : "Mirror all TCP traffic to any location",
        "DestinationCidrBlock" : "0.0.0.0/0",
        "Protocol" : 6,
        "RuleAction" : "accept",
        "RuleNumber" : 100,
        "SourceCidrBlock" : "0.0.0.0/0",
        "TrafficDirection" : "egress",
        "TrafficMirrorFilterId" : { "Ref": "ResurfaceMirrorFilter" }
      }
    },
    "ResurfaceMirrorSession": {
      "Type": "AWS::EC2::TrafficMirrorSession",
      "Properties": {
        "NetworkInterfaceId": { "Ref": "SourceNetworkInterfaceID" },
        "TrafficMirrorTargetId": { "Ref": "ResurfaceMirrorTarget" },
        "TrafficMirrorFilterId": { "Ref": "ResurfaceMirrorFilter" },
        "SessionNumber": { "Ref": "MirrorSessionNumber" },
        "VirtualNetworkId": { "Ref": "VirtualNetworkID" }
      }
    }
  }
}
